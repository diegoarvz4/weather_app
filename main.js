!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e){if(arguments.length<1)throw new TypeError("1 argument required, but only "+arguments.length+" present");return function(e){if(arguments.length<1)throw new TypeError("1 argument required, but only "+arguments.length+" present");var t=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}(1e3*function(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}(e))}n.r(t),document.getElementById("city-input").addEventListener("keydown",e=>{if(13===e.keyCode){e.preventDefault(),document.getElementById("stats").innerHTML='<div id="loader" class="lds-dual-ring set-hidden"></div>',document.getElementById("loader").classList.toggle("set-hidden");const t=document.getElementById("city-input").value.toLowerCase();a(t)}});const a=async e=>{const t=`https://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=dd0f409a2c224dba43acfef73f2eec39&units=metric`,n=await fetch(t,{mode:"cors"}),a=await n.json(),o=a.weather[0].main,s=a.weather[0].description,d=a.main.temp,c=a.main.humidity,u=a.wind.speed,l=a.clouds.all,p=new Date(a.dt),m=a.name+", "+a.sys.country,f=a.sys.country,h=a.weather[0].icon,g=(new Date).toUTCString(),y=new Date(g.substring(0,g.length-4)),w=new Date(r(y.getTime()/1e3+a.timezone));i({cityTime:w,weather:o,weather_desc:s,temperature:d,humidity:c,time:p,name:m,weatherIconURL:h,wind:u,clouds:l,code:f})},i=e=>{document.getElementById("stats").innerHTML=`<div id="loader" class="lds-dual-ring set-hidden"></div>\n                              <div class="stats-header">\n                                <div class="stats-header-city">\n                                  <h1>${e.name} </h1><img src="http://openweathermap.org/images/flags/${e.code.toLowerCase()}.png"/>\n                                </div>\n                                <h4>${e.cityTime.toString().substring(0,21)}</h4>\n                                <h4 style="text-transform: capitalize;">${e.weather_desc}</h4>\n                              </div>\n                              <div class="stats-body">\n                                <span>${e.temperature} Â°C</span> \n                                <img  src ="http://openweathermap.org/img/wn/${e.weatherIconURL}@2x.png" />\n                              </div>\n                              <div class="stats-other">\n                                <h5>Humidity ${e.humidity}%</h5>\n                                <h5>Wind ${e.wind} m/s </h5>\n                                <h5>Clouds ${e.clouds}% </h5>\n                              </div>\n  `}}]);